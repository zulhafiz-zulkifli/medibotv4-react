{"ast":null,"code":"var _jsxFileName = \"/home/zulh2605/catkin_ws/src/medibotv4_react/src/components/Teleoperation.jsx\";\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.initTeleopKeyboard();\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  initTeleopKeyboard() {\n    if (teleop == null) {\n      // Initialize the teleop.\n      var teleop = new window.KEYBOARDTELEOP.Teleop({\n        ros: this.state.ros,\n        topic: '/cmd_vel'\n      });\n    }\n\n    console.log('TeleopKeyboard Initialized.');\n  }\n\n  init_connection() {\n    // eslint-disable-next-line\n    this.state.ros = new window.ROSLIB.Ros();\n    this.state.ros.on(\"connection\", () => {\n      console.info(\"Connected to ROS:TELEOP\");\n    });\n    this.state.ros.on(\"close\", () => {\n      console.warn(\"Disconnected from ROS:TELEOP\");\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.error(\"Connection problem : TELEOP\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    this.state.ros.on(\"error\", error => {});\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.error(\"Connection problem : TELEOP\");\n    }\n  }\n\n  handleMove(event) {\n    console.log(\"handle move\"); //create a ROS publisher to /cmd_vel\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    }); //create twist message to be published\n\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 150,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 75\n      }\n    }); //publish the message to /cmd_vel\n\n    cmd_vel.publish(twist);\n  }\n\n  handleStop(event) {\n    console.log(\"handle stop\"); //create a ROS publisher to /cmd_vel\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    }); //create twist message to be published\n\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    }); //publish the message to /cmd_vel\n\n    cmd_vel.publish(twist);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 150,\n        baseColor: \"#BBBBBB\",\n        stickColor: \"#EEEEEE\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Teleoperation;","map":{"version":3,"sources":["/home/zulh2605/catkin_ws/src/medibotv4_react/src/components/Teleoperation.jsx"],"names":["React","Component","Joystick","Config","Teleoperation","constructor","state","ros","init_connection","initTeleopKeyboard","handleMove","bind","handleStop","teleop","window","KEYBOARDTELEOP","Teleop","topic","console","log","ROSLIB","Ros","on","info","warn","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","event","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","twist","Message","linear","x","y","z","angular","publish","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\n\nclass Teleoperation extends Component {\n\tstate = {\n\t\tros : null\n\t};\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.init_connection();\n\t\tthis.initTeleopKeyboard();\n\t\tthis.handleMove = this.handleMove.bind(this);\n\t\tthis.handleStop = this.handleStop.bind(this);\n\t}\n\n\tinitTeleopKeyboard() {\n\t    if (teleop == null) {\n\t        // Initialize the teleop.\n\t        var teleop = new window.KEYBOARDTELEOP.Teleop({\n\t            ros: this.state.ros,\n\t            topic: '/cmd_vel'\n\t        });\n\t    }\n\t    console.log('TeleopKeyboard Initialized.');\n\t}\n\n\tinit_connection(){\n\t\t// eslint-disable-next-line\n\t\tthis.state.ros = new window.ROSLIB.Ros();\n\n\t\tthis.state.ros.on(\"connection\", () => {\n\t\t\tconsole.info(\"Connected to ROS:TELEOP\");\n\t\t});\n\n\t\tthis.state.ros.on(\"close\", () => {\n\t\t\tconsole.warn(\"Disconnected from ROS:TELEOP\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\ttry{\n\t\t\t\t\tthis.state.ros.connect(\n\t\t\t\t\t\t\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\"\n\t\t\t\t\t);\n\t\t\t\t}catch(error){\n\t\t\t\t\tconsole.error(\"Connection problem : TELEOP\");\n\t\t\t\t}\n\t\t\t},Config.RECONNECTION_TIMER);\n\t\t});\n\n\t\tthis.state.ros.on(\"error\", (error) => {});\n\n\t\ttry{\n\t\t\tthis.state.ros.connect(\n\t\t\t\t\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\"\n\t\t\t);\n\t\t}catch(error){\n\t\t\tconsole.error(\"Connection problem : TELEOP\");\n\t\t}\n\t}\n\n\thandleMove(event){\n\t\tconsole.log(\"handle move\");\n\t\t//create a ROS publisher to /cmd_vel\n\t\tvar cmd_vel = new window.ROSLIB.Topic({\n\t\t\tros: this.state.ros,\n\t\t\tname: Config.CMD_VEL_TOPIC,\n\t\t\tmessageType: \"geometry_msgs/Twist\"\n\t\t});\n\t\t//create twist message to be published\n\t\tvar twist = new window.ROSLIB.Message({\n\t\t\tlinear:{\n\t\t\t\tx: event.y/150,\n\t\t\t\ty: 0,\n\t\t\t\tz: 0\n\t\t\t},\n\t\t\tangular:{\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: -event.x/75\n\t\t\t}\n\t\t});\n\t\t//publish the message to /cmd_vel\n\t\tcmd_vel.publish(twist);\n\t}\n\n\thandleStop(event){\n\t\tconsole.log(\"handle stop\");\n\t\t//create a ROS publisher to /cmd_vel\n\t\tvar cmd_vel = new window.ROSLIB.Topic({\n\t\t\tros: this.state.ros,\n\t\t\tname: Config.CMD_VEL_TOPIC,\n\t\t\tmessageType: \"geometry_msgs/Twist\"\n\t\t});\n\t\t//create twist message to be published\n\t\tvar twist = new window.ROSLIB.Message({\n\t\t\tlinear:{\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 0\n\t\t\t},\n\t\t\tangular:{\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 0\n\t\t\t}\n\t\t});\n\t\t//publish the message to /cmd_vel\n\t\tcmd_vel.publish(twist);\n\t}\n\n\trender() {\n\t\treturn ( \n\t\t\t<div>\n\t\t\t\t<Joystick \n\t\t\t\tsize={150} \n\t\t\t\tbaseColor=\"#BBBBBB\"\n\t\t\t\tstickColor=\"#EEEEEE\" \n\t\t\t\tmove={this.handleMove} \n\t\t\t\tstop={this.handleStop}\n\t\t\t\t></Joystick>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Teleoperation;\n\n\n"]},"metadata":{},"sourceType":"module"}