{"ast":null,"code":"var _jsxFileName = \"/home/zulh2605/catkin_ws/src/medibotv4_react/src/components/Connection.jsx\";\nimport React, { Component } from \"react\";\nimport { Alert, Spinner } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Connection extends Component {\n  constructor() {\n    super();\n    this.state = {\n      connected: false,\n      ros: null\n    };\n    this.init_connection();\n  }\n\n  init_connection() {\n    // eslint-disable-next-line\n    this.state.ros = new window.ROSLIB.Ros();\n    this.state.ros.on(\"connection\", () => {\n      console.info(\"Connected to ROS:CONNECTION\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.warn(\"Disconnected from ROS:CONNECTION\");\n      this.setState({\n        connected: false\n      });\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.error(\"Connection problem : CONNECTION\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    this.state.ros.on(\"error\", error => {});\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.error(\"Connection problem : CONNECTION\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"text-center m-3\",\n        variant: this.state.connected ? \"success\" : \"danger\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          variant: \"danger\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this), this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Connection;","map":{"version":3,"sources":["/home/zulh2605/catkin_ws/src/medibotv4_react/src/components/Connection.jsx"],"names":["React","Component","Alert","Spinner","Config","Connection","constructor","state","connected","ros","init_connection","window","ROSLIB","Ros","on","console","info","setState","warn","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAeC,OAAf,QAA6B,iBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAMlCK,EAAAA,WAAW,GAAE;AACZ;AADY,SALbC,KAKa,GALL;AACPC,MAAAA,SAAS,EAAG,KADL;AAEPC,MAAAA,GAAG,EAAG;AAFC,KAKK;AAEZ,SAAKC,eAAL;AACA;;AAGDA,EAAAA,eAAe,GAAE;AAChB;AACA,SAAKH,KAAL,CAAWE,GAAX,GAAiB,IAAIE,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB;AAEA,SAAKN,KAAL,CAAWE,GAAX,CAAeK,EAAf,CAAkB,YAAlB,EAAgC,MAAM;AACrCC,MAAAA,OAAO,CAACC,IAAR,CAAa,6BAAb;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,KAHD;AAKA,SAAKD,KAAL,CAAWE,GAAX,CAAeK,EAAf,CAAkB,OAAlB,EAA2B,MAAM;AAChCC,MAAAA,OAAO,CAACG,IAAR,CAAa,kCAAb;AACA,WAAKD,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAC;AAAX,OAAd;AACAW,MAAAA,UAAU,CAAC,MAAI;AACd,YAAG;AACF,eAAKZ,KAAL,CAAWE,GAAX,CAAeW,OAAf,CACC,UAAQhB,MAAM,CAACiB,mBAAf,GAAmC,GAAnC,GAAuCjB,MAAM,CAACkB,qBAA9C,GAAoE,EADrE;AAGA,SAJD,CAIC,OAAMC,KAAN,EAAY;AACZR,UAAAA,OAAO,CAACQ,KAAR,CAAc,iCAAd;AACA;AACD,OARS,EAQRnB,MAAM,CAACoB,kBARC,CAAV;AASA,KAZD;AAcA,SAAKjB,KAAL,CAAWE,GAAX,CAAeK,EAAf,CAAkB,OAAlB,EAA4BS,KAAD,IAAW,CAAE,CAAxC;;AAEA,QAAG;AACF,WAAKhB,KAAL,CAAWE,GAAX,CAAeW,OAAf,CACC,UAAQhB,MAAM,CAACiB,mBAAf,GAAmC,GAAnC,GAAuCjB,MAAM,CAACkB,qBAA9C,GAAoE,EADrE;AAGA,KAJD,CAIC,OAAMC,KAAN,EAAY;AACZR,MAAAA,OAAO,CAACQ,KAAR,CAAc,iCAAd;AACA;AACD;;AAGDE,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,6BACC,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWC,SAAX,GAAqB,SAArB,GAA+B,QAA3E;AAAA,gCACA,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,MAAnB;AAA0B,UAAA,OAAO,EAAC,QAAlC;AAA2C,UAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADA,EAEE,KAAKD,KAAL,CAAWC,SAAX,GAAsB,iBAAtB,GAAwC,oBAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAQA;;AAxDiC;;AA2DnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Alert, Spinner} from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\n\nclass Connection extends Component {\n\tstate = {\n\t\tconnected : false, \n\t\tros : null\n\t};\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.init_connection();\n\t}\n\n\n\tinit_connection(){\n\t\t// eslint-disable-next-line\n\t\tthis.state.ros = new window.ROSLIB.Ros();\n\n\t\tthis.state.ros.on(\"connection\", () => {\n\t\t\tconsole.info(\"Connected to ROS:CONNECTION\");\n\t\t\tthis.setState({connected:true});\n\t\t});\n\n\t\tthis.state.ros.on(\"close\", () => {\n\t\t\tconsole.warn(\"Disconnected from ROS:CONNECTION\");\n\t\t\tthis.setState({connected:false});\n\t\t\tsetTimeout(()=>{\n\t\t\t\ttry{\n\t\t\t\t\tthis.state.ros.connect(\n\t\t\t\t\t\t\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\"\n\t\t\t\t\t);\n\t\t\t\t}catch(error){\n\t\t\t\t\tconsole.error(\"Connection problem : CONNECTION\");\n\t\t\t\t}\n\t\t\t},Config.RECONNECTION_TIMER);\n\t\t});\n\n\t\tthis.state.ros.on(\"error\", (error) => {});\n\n\t\ttry{\n\t\t\tthis.state.ros.connect(\n\t\t\t\t\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\"\n\t\t\t);\n\t\t}catch(error){\n\t\t\tconsole.error(\"Connection problem : CONNECTION\");\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn ( \n\t\t\t<div>\n\t\t\t\t<Alert className=\"text-center m-3\" variant={this.state.connected?\"success\":\"danger\"}>\n\t\t\t\t<Spinner animation=\"grow\" variant=\"danger\" size=\"sm\"/>\n\t\t\t\t\t{this.state.connected? \"Robot Connected\":\"Robot Disconnected\"}\n\t\t\t\t</Alert>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Connection;"]},"metadata":{},"sourceType":"module"}